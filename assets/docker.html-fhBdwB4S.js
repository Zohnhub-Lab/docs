import{_ as p}from"./updocker-yVuyGOuG.js";import{_ as d,r as c,o as u,c as m,b as a,e,a as l,w as s,f as i}from"./app--VcHmvhe.js";const h={},v=i(`<h1 id="use-docker" tabindex="-1"><a class="header-anchor" href="#use-docker" aria-hidden="true">#</a> Use Docker</h1><h2 id="see-the-admin-s-info" tabindex="-1"><a class="header-anchor" href="#see-the-admin-s-info" aria-hidden="true">#</a> See the admin&#39;s info:</h2><h4 id="lower-than-v3-25-0" tabindex="-1"><a class="header-anchor" href="#lower-than-v3-25-0" aria-hidden="true">#</a> Lower than v3.25.0</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> alist ./alist admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="higher-than-v3-25-0" tabindex="-1"><a class="header-anchor" href="#higher-than-v3-25-0" aria-hidden="true">#</a> Higher than v3.25.0</h4><p>Versions above 3.25.0 change the password to an encrypted hash value, and the password cannot be calculated directly. If the password is forgotten, it can only be re-<strong><code>randomly generated</code></strong> or <strong><code>manually set</code></strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Randomly generate a password</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> alist ./alist admin random
<span class="token comment"># Manually set a password, \`NEW_PASSWORD\` refers to the password you need to set</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> alist ./alist admin <span class="token builtin class-name">set</span> NEW_PASSWORD
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="release-version" tabindex="-1"><a class="header-anchor" href="#release-version" aria-hidden="true">#</a> <strong>Release version</strong></h2><h4 id="docker-cli" tabindex="-1"><a class="header-anchor" href="#docker-cli" aria-hidden="true">#</a> <strong>docker-cli</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>unless-stopped <span class="token parameter variable">-v</span> /etc/alist:/opt/alist/data <span class="token parameter variable">-p</span> <span class="token number">5244</span>:5244 <span class="token parameter variable">-e</span> <span class="token assign-left variable">PUID</span><span class="token operator">=</span><span class="token number">0</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">PGID</span><span class="token operator">=</span><span class="token number">0</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">UMASK</span><span class="token operator">=</span>022 <span class="token parameter variable">--name</span><span class="token operator">=</span><span class="token string">&quot;alist&quot;</span> xhofe/alist:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-compose" aria-hidden="true">#</a> <strong>docker-compose</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /etc/alist
<span class="token builtin class-name">cd</span> /etc/alist
<span class="token function">wget</span> https://alist.nn.ci/docker-compose.yml
<span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Alternatively, you can manually create a <code>docker-compose.yml</code> file with the following content.</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.3&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
    <span class="token key atrule">alist</span><span class="token punctuation">:</span>
        <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">&#39;xhofe/alist:latest&#39;</span>
        <span class="token key atrule">container_name</span><span class="token punctuation">:</span> alist
        <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> <span class="token string">&#39;/etc/alist:/opt/alist/data&#39;</span>
        <span class="token key atrule">ports</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> <span class="token string">&#39;5244:5244&#39;</span>
        <span class="token key atrule">environment</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> PUID=0
            <span class="token punctuation">-</span> PGID=0
            <span class="token punctuation">-</span> UMASK=022
        <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After the service runs, the default time zone for the container is UTC time zone. If you want to specify the time zone for the container to run, you can achieve this by passing this variable:<code>-e &quot;TZ=Asia/Shanghai&quot;</code>ã€‚</p><h3 id="offline-download-with-aria2" tabindex="-1"><a class="header-anchor" href="#offline-download-with-aria2" aria-hidden="true">#</a> <strong>Offline download with aria2</strong></h3>`,16),k={href:"https://hub.docker.com/r/xhofe/alist-aria2",target:"_blank",rel:"noopener noreferrer"},b=i(`<h3 id="dev-version" tabindex="-1"><a class="header-anchor" href="#dev-version" aria-hidden="true">#</a> <strong>Dev version</strong></h3><p>Just for amd64/arm64. Not recommended, this may can&#39;t work properly.</p><h4 id="docker-cli-1" tabindex="-1"><a class="header-anchor" href="#docker-cli-1" aria-hidden="true">#</a> <strong>docker-cli</strong></h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--restart</span><span class="token operator">=</span>unless-stopped <span class="token parameter variable">-v</span> /etc/alist:/opt/alist/data <span class="token parameter variable">-p</span> <span class="token number">5244</span>:5244 <span class="token parameter variable">-e</span> <span class="token assign-left variable">PUID</span><span class="token operator">=</span><span class="token number">0</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">PGID</span><span class="token operator">=</span><span class="token number">0</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">UMASK</span><span class="token operator">=</span>022 <span class="token parameter variable">--name</span><span class="token operator">=</span><span class="token string">&quot;alist&quot;</span> xhofe/alist:beta
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="docker-compose-1" tabindex="-1"><a class="header-anchor" href="#docker-compose-1" aria-hidden="true">#</a> <strong>docker-compose</strong></h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.3&#39;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
    <span class="token key atrule">alist</span><span class="token punctuation">:</span>
        <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">&#39;xhofe/alist:beta&#39;</span>
        <span class="token key atrule">container_name</span><span class="token punctuation">:</span> alist
        <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> <span class="token string">&#39;/etc/alist:/opt/alist/data&#39;</span>
        <span class="token key atrule">ports</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> <span class="token string">&#39;5244:5244&#39;</span>
        <span class="token key atrule">environment</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> PUID=0
            <span class="token punctuation">-</span> PGID=0
            <span class="token punctuation">-</span> UMASK=022
        <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="specify-version" tabindex="-1"><a class="header-anchor" href="#specify-version" aria-hidden="true">#</a> <strong>Specify version</strong></h3>`,7),g={href:"https://hub.docker.com/r/xhofe/alist",target:"_blank",rel:"noopener noreferrer"},f=i('<h3 id="image-with-built-in-ffmpeg" tabindex="-1"><a class="header-anchor" href="#image-with-built-in-ffmpeg" aria-hidden="true">#</a> <strong>Image with built-in ffmpeg</strong></h3><p>You can switch to image with out-of-the-box ffmpeg environment by adding <code>-ffmpeg</code> to any image tag.</p><p>If the thumbnail feature is still not working, please verify the following:</p><ul><li>You are using local storage</li><li>Switched to grid view</li><li>The thumbnail switch in local storage driver settings is enabled</li><li>The configuration path for the thumbnail cache folder in local storage is correct, for example, <code>data/thumbnail</code></li></ul>',4),y=a("p",null,[a("strong",null,"docker-cli")],-1),w=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),e(" run "),a("span",{class:"token parameter variable"},"-d"),e(),a("span",{class:"token parameter variable"},"--restart"),a("span",{class:"token operator"},"="),e("unless-stopped "),a("span",{class:"token parameter variable"},"-v"),e(" /etc/alist:/opt/alist/data "),a("span",{class:"token parameter variable"},"-p"),e(),a("span",{class:"token number"},"5244"),e(":5244 "),a("span",{class:"token parameter variable"},"-e"),e(),a("span",{class:"token assign-left variable"},"PUID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),e(),a("span",{class:"token parameter variable"},"-e"),e(),a("span",{class:"token assign-left variable"},"PGID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),e(),a("span",{class:"token parameter variable"},"-e"),e(),a("span",{class:"token assign-left variable"},"UMASK"),a("span",{class:"token operator"},"="),e("022 "),a("span",{class:"token parameter variable"},"--name"),a("span",{class:"token operator"},"="),a("span",{class:"token string"},'"alist"'),e(` xhofe/alist:latest-ffmpeg
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),x=a("p",null,[a("strong",null,"docker-compose")],-1),_=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[e("version: "),a("span",{class:"token string"},"'3.3'"),e(`
services:
    alist:
        image: `),a("span",{class:"token string"},"'xhofe/alist:latest-ffmpeg'"),e(`
        container_name: alist
        volumes:
            - `),a("span",{class:"token string"},"'/etc/alist:/opt/alist/data'"),e(`
        ports:
            - `),a("span",{class:"token string"},"'5244:5244'"),e(`
        environment:
            - `),a("span",{class:"token assign-left variable"},"PUID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),e(`
            - `),a("span",{class:"token assign-left variable"},"PGID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),e(`
            - `),a("span",{class:"token assign-left variable"},"UMASK"),a("span",{class:"token operator"},"="),e(`022
        restart: unless-stopped
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),I=a("p",null,[a("strong",null,"docker-cli")],-1),D=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),e(" run "),a("span",{class:"token parameter variable"},"-d"),e(),a("span",{class:"token parameter variable"},"--restart"),a("span",{class:"token operator"},"="),e("unless-stopped "),a("span",{class:"token parameter variable"},"-v"),e(" /etc/alist:/opt/alist/data "),a("span",{class:"token parameter variable"},"-p"),e(),a("span",{class:"token number"},"5244"),e(":5244 "),a("span",{class:"token parameter variable"},"-e"),e(),a("span",{class:"token assign-left variable"},"PUID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),e(),a("span",{class:"token parameter variable"},"-e"),e(),a("span",{class:"token assign-left variable"},"PGID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),e(),a("span",{class:"token parameter variable"},"-e"),e(),a("span",{class:"token assign-left variable"},"UMASK"),a("span",{class:"token operator"},"="),e("022 "),a("span",{class:"token parameter variable"},"--name"),a("span",{class:"token operator"},"="),a("span",{class:"token string"},'"alist"'),e(` xhofe/alist:beta-ffmpeg
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),A=a("p",null,[a("strong",null,"docker-compose")],-1),P=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[e("version: "),a("span",{class:"token string"},"'3.3'"),e(`
services:
    alist:
        image: `),a("span",{class:"token string"},"'xhofe/alist:beta-ffmpeg'"),e(`
        container_name: alist
        volumes:
            - `),a("span",{class:"token string"},"'/etc/alist:/opt/alist/data'"),e(`
        ports:
            - `),a("span",{class:"token string"},"'5244:5244'"),e(`
        environment:
            - `),a("span",{class:"token assign-left variable"},"PUID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),e(`
            - `),a("span",{class:"token assign-left variable"},"PGID"),a("span",{class:"token operator"},"="),a("span",{class:"token number"},"0"),e(`
            - `),a("span",{class:"token assign-left variable"},"UMASK"),a("span",{class:"token operator"},"="),e(`022
        restart: unless-stopped
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"}),a("div",{class:"line-number"})])],-1),U=i(`<h3 id="user-group-identifiers" tabindex="-1"><a class="header-anchor" href="#user-group-identifiers" aria-hidden="true">#</a> <strong>User / Group Identifiers</strong></h3><p>When using volumes (<code>-v</code> flags) permissions issues can arise between the host OS and the container, we avoid this issue by allowing you to specify the user <code>PUID</code> and group <code>PGID</code>.</p><p>Ensure any volume directories on the host are owned by the same user you specify and any permissions issues will vanish like magic.</p><p>In this instance <code>PUID=1000</code> and <code>PGID=1000</code>, to find yours use <code>id user</code> as below:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  $ <span class="token function">id</span> username
    <span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">(</span>dockeruser<span class="token punctuation">)</span> <span class="token assign-left variable">gid</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">(</span>dockergroup<span class="token punctuation">)</span> <span class="token assign-left variable">groups</span><span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">(</span>dockergroup<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="manually-build-docker-image" tabindex="-1"><a class="header-anchor" href="#manually-build-docker-image" aria-hidden="true">#</a> <strong>Manually build Docker image</strong></h3><p>Install Docker, clone the repository, and navigate to the root directory of the repository, no additional preparation is needed.</p>`,7),S=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),e(" build "),a("span",{class:"token parameter variable"},"-t"),e(" xhofe/alist:latest "),a("span",{class:"token builtin class-name"},"."),e(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),G=a("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[a("pre",{class:"language-bash"},[a("code",null,[a("span",{class:"token function"},"docker"),e(" build "),a("span",{class:"token parameter variable"},"-t"),e(" xhofe/alist:latest-ffmpeg --build-arg "),a("span",{class:"token assign-left variable"},"INSTALL_FFMPEG"),a("span",{class:"token operator"},"="),e("true "),a("span",{class:"token builtin class-name"},"."),e(`
`)])]),a("div",{class:"line-numbers","aria-hidden":"true"},[a("div",{class:"line-number"})])],-1),M=i('<h2 id="additional-notes-about-the-offline-download-feature" tabindex="-1"><a class="header-anchor" href="#additional-notes-about-the-offline-download-feature" aria-hidden="true">#</a> <strong>Additional notes about the offline download feature</strong></h2><p>If the image is not pulled using the &#39;&#39;&#39;docker pull --platform&#39;&#39;&#39; parameter, docker may pull the 32-bit image on the 64-bit operating system, which may cause the offline download function to be unavailable even under normal configuration.</p><p>When an error occurs, you will see a similar error log in Alist&#39;s log file.</p><p><code>ERRO[2022-11-20 12:05:19] error [unaligned 64-bit atomic operation] while run task [download http://pic.rmb.bdstatic.com/bjh/34ee946f7a74435a167ca4351d723374.png to [/ftp](/)]</code></p><p>Solution, if the CPU architecture is 64-bit, try to manually pull the 64-bit docker image, rebuild the container, and try again.</p><p>If the CPU architecture is 32-bit, there is currently no solution available.</p><h2 id="how-to-update-docker-installation" tabindex="-1"><a class="header-anchor" href="#how-to-update-docker-installation" aria-hidden="true">#</a> <strong>How to update Docker installation?</strong></h2><details class="hint-container details"><summary>docker-cli update</summary><ol><li>docker ps -a #View the container (find the ID of the Alist container)</li><li>docker stop ID #Stop Alist running, otherwise it cannot be deleted (this time the ID of the Alist container is d429749a6e69, it is different for each installation)</li><li>docker rm ID #Delete the Alist container (the data is still there as long as you don&#39;t delete it manually)</li><li>docker pull xhofe/alist:latest</li><li><a href="#docker-cli">Enter the installation command and click to view</a></li><li>The update is complete, go and have a look.. It&#39;s that simple</li></ol><p><strong>There is a missing step in the picture, it is step 4 in the tutorial....remember to execute</strong><br><img src="'+p+'" alt="docker"></p></details><details class="hint-container details"><summary>docker-compose update</summary><ol><li><p>docker-compose pull</p></li><li><p>docker-compose up -d</p></li></ol></details><p>Q: My version is v3.x.x and I cannot upgrade to the latest version. <code>docker pull xhofe/alist:latest</code> does not work to pull the latest version. After changing to docker-compose, it is still version 3.x.x</p><p>A: The reason is that your docker has set up a mirror, and the latest version cannot be updated from the mirror, so modify /etc/docker/daemon.json and delete &quot;registry-mirrors&quot;: [&quot;mirror accelerator address&quot;]</p><ul><li>If deletion doesnâ€™t work, you can consider replacing it with a <code>mirror acceleration address</code></li><li>Or simple and rude: when downloading, replace <code>xhofe/alist:latest</code> with <code>xhofe/alist:v3.16.3</code> (specify the version, the latest when writing the tutorial is 3.16.3)</li></ul>',12);function T(q,E){const o=c("ExternalLinkIcon"),r=c("Tabs");return u(),m("div",null,[v,a("p",null,[e("If you want to use aria2 to offline download, we recommend you to use this "),a("a",k,[e("image"),l(o)]),e(", which carries a pre-installed aria2.")]),b,a("p",null,[e("See "),a("a",g,[e("https://hub.docker.com/r/xhofe/alist"),l(o)]),e(" for details")]),f,l(r,{id:"92",data:[{id:"latest"},{id:"beta"}],"tab-id":"Docker-ffmpeg"},{title0:s(({value:n,isActive:t})=>[e("latest")]),title1:s(({value:n,isActive:t})=>[e("beta")]),tab0:s(({value:n,isActive:t})=>[y,w,x,_]),tab1:s(({value:n,isActive:t})=>[I,D,A,P]),_:1}),U,l(r,{id:"133",data:[{id:"basic"},{id:"with ffmpeg"}],"tab-id":"Docker-build"},{title0:s(({value:n,isActive:t})=>[e("basic")]),title1:s(({value:n,isActive:t})=>[e("with ffmpeg")]),tab0:s(({value:n,isActive:t})=>[S]),tab1:s(({value:n,isActive:t})=>[G]),_:1}),M])}const O=d(h,[["render",T],["__file","docker.html.vue"]]);export{O as default};
